<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSetTest" targetNamespace="http://tempuri.org/DataSetTest.xsd" xmlns:mstns="http://tempuri.org/DataSetTest.xsd" xmlns="http://tempuri.org/DataSetTest.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestXabierSanMartinConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestXabierSanMartinConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CapaDatos.Properties.Settings.GlobalReference.Default.TestXabierSanMartinConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CategoriasTableAdapter" GeneratorDataComponentClassName="CategoriasTableAdapter" Name="Categorias" UserDataComponentName="CategoriasTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestXabierSanMartinConnectionString (Settings)" DbObjectName="TestXabierSanMartin.dbo.Categorias" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Categorias] WHERE (([IdCategoria] = @Original_IdCategoria) AND ([Descripcion] = @Original_Descripcion))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdCategoria" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCategoria" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Categorias] ([Descripcion]) VALUES (@Descripcion);
SELECT IdCategoria, Descripcion FROM Categorias WHERE (IdCategoria = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdCategoria, Descripcion FROM dbo.Categorias</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Categorias] SET [Descripcion] = @Descripcion WHERE (([IdCategoria] = @Original_IdCategoria) AND ([Descripcion] = @Original_Descripcion));
SELECT IdCategoria, Descripcion FROM Categorias WHERE (IdCategoria = @IdCategoria)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdCategoria" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCategoria" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IdCategoria" ColumnName="IdCategoria" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IdCategoria" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IdCategoria" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdCategoria" DataSetColumn="IdCategoria" />
              <Mapping SourceColumn="Descripcion" DataSetColumn="Descripcion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CategoriasTestsTableAdapter" GeneratorDataComponentClassName="CategoriasTestsTableAdapter" Name="CategoriasTests" UserDataComponentName="CategoriasTestsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestXabierSanMartinConnectionString (Settings)" DbObjectName="TestXabierSanMartin.dbo.CategoriasTests" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CategoriasTests] WHERE (([IdCategoria] = @Original_IdCategoria) AND ([IdTest] = @Original_IdTest))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdCategoria" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCategoria" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CategoriasTests] ([IdCategoria], [IdTest]) VALUES (@IdCategoria, @IdTest);
SELECT IdCategoria, IdTest FROM CategoriasTests WHERE (IdCategoria = @IdCategoria) AND (IdTest = @IdTest)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdCategoria" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCategoria" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdCategoria, IdTest FROM dbo.CategoriasTests</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CategoriasTests] SET [IdCategoria] = @IdCategoria, [IdTest] = @IdTest WHERE (([IdCategoria] = @Original_IdCategoria) AND ([IdTest] = @Original_IdTest));
SELECT IdCategoria, IdTest FROM CategoriasTests WHERE (IdCategoria = @IdCategoria) AND (IdTest = @IdTest)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdCategoria" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCategoria" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdCategoria" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCategoria" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdCategoria" DataSetColumn="IdCategoria" />
              <Mapping SourceColumn="IdTest" DataSetColumn="IdTest" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PreguntasTableAdapter" GeneratorDataComponentClassName="PreguntasTableAdapter" Name="Preguntas" UserDataComponentName="PreguntasTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestXabierSanMartinConnectionString (Settings)" DbObjectName="TestXabierSanMartin.dbo.Preguntas" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Preguntas] WHERE (([IdPregunta] = @Original_IdPregunta) AND ([Enunciado] = @Original_Enunciado) AND ([RespV] = @Original_RespV) AND ([IdTest] = @Original_IdTest))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPregunta" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPregunta" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Enunciado" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Enunciado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_RespV" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RespV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Preguntas] ([Enunciado], [RespV], [IdTest]) VALUES (@Enunciado, @RespV, @IdTest);
SELECT IdPregunta, Enunciado, RespV, IdTest FROM Preguntas WHERE (IdPregunta = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Enunciado" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Enunciado" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@RespV" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RespV" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdPregunta, Enunciado, RespV, IdTest FROM dbo.Preguntas</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Preguntas] SET [Enunciado] = @Enunciado, [RespV] = @RespV, [IdTest] = @IdTest WHERE (([IdPregunta] = @Original_IdPregunta) AND ([Enunciado] = @Original_Enunciado) AND ([RespV] = @Original_RespV) AND ([IdTest] = @Original_IdTest));
SELECT IdPregunta, Enunciado, RespV, IdTest FROM Preguntas WHERE (IdPregunta = @IdPregunta)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Enunciado" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Enunciado" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@RespV" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RespV" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdPregunta" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdPregunta" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Enunciado" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Enunciado" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_RespV" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="RespV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IdPregunta" ColumnName="IdPregunta" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IdPregunta" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IdPregunta" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdPregunta" DataSetColumn="IdPregunta" />
              <Mapping SourceColumn="Enunciado" DataSetColumn="Enunciado" />
              <Mapping SourceColumn="RespV" DataSetColumn="RespV" />
              <Mapping SourceColumn="IdTest" DataSetColumn="IdTest" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestTableAdapter" GeneratorDataComponentClassName="TestTableAdapter" Name="Test" UserDataComponentName="TestTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestXabierSanMartinConnectionString (Settings)" DbObjectName="TestXabierSanMartin.dbo.Test" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Test] WHERE (([IdTest] = @Original_IdTest) AND ([Descripcion] = @Original_Descripcion))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Test] ([Descripcion]) VALUES (@Descripcion);
SELECT IdTest, Descripcion FROM Test WHERE (IdTest = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdTest, Descripcion FROM dbo.Test</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Test] SET [Descripcion] = @Descripcion WHERE (([IdTest] = @Original_IdTest) AND ([Descripcion] = @Original_Descripcion));
SELECT IdTest, Descripcion FROM Test WHERE (IdTest = @IdTest)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdTest" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Descripcion" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Descripcion" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="IdTest" ColumnName="IdTest" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IdTest" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="IdTest" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdTest" DataSetColumn="IdTest" />
              <Mapping SourceColumn="Descripcion" DataSetColumn="Descripcion" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSetTest" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSetTest" msprop:Generator_UserDSName="DataSetTest">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Categorias" msprop:Generator_TableClassName="CategoriasDataTable" msprop:Generator_TableVarName="tableCategorias" msprop:Generator_TablePropName="Categorias" msprop:Generator_RowDeletingName="CategoriasRowDeleting" msprop:Generator_RowChangingName="CategoriasRowChanging" msprop:Generator_RowEvHandlerName="CategoriasRowChangeEventHandler" msprop:Generator_RowDeletedName="CategoriasRowDeleted" msprop:Generator_UserTableName="Categorias" msprop:Generator_RowChangedName="CategoriasRowChanged" msprop:Generator_RowEvArgName="CategoriasRowChangeEvent" msprop:Generator_RowClassName="CategoriasRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdCategoria" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIdCategoria" msprop:Generator_ColumnPropNameInRow="IdCategoria" msprop:Generator_ColumnPropNameInTable="IdCategoriaColumn" msprop:Generator_UserColumnName="IdCategoria" type="xs:int" />
              <xs:element name="Descripcion" msprop:Generator_ColumnVarNameInTable="columnDescripcion" msprop:Generator_ColumnPropNameInRow="Descripcion" msprop:Generator_ColumnPropNameInTable="DescripcionColumn" msprop:Generator_UserColumnName="Descripcion">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CategoriasTests" msprop:Generator_TableClassName="CategoriasTestsDataTable" msprop:Generator_TableVarName="tableCategoriasTests" msprop:Generator_TablePropName="CategoriasTests" msprop:Generator_RowDeletingName="CategoriasTestsRowDeleting" msprop:Generator_RowChangingName="CategoriasTestsRowChanging" msprop:Generator_RowEvHandlerName="CategoriasTestsRowChangeEventHandler" msprop:Generator_RowDeletedName="CategoriasTestsRowDeleted" msprop:Generator_UserTableName="CategoriasTests" msprop:Generator_RowChangedName="CategoriasTestsRowChanged" msprop:Generator_RowEvArgName="CategoriasTestsRowChangeEvent" msprop:Generator_RowClassName="CategoriasTestsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdCategoria" msprop:Generator_ColumnVarNameInTable="columnIdCategoria" msprop:Generator_ColumnPropNameInRow="IdCategoria" msprop:Generator_ColumnPropNameInTable="IdCategoriaColumn" msprop:Generator_UserColumnName="IdCategoria" type="xs:int" />
              <xs:element name="IdTest" msprop:Generator_ColumnVarNameInTable="columnIdTest" msprop:Generator_ColumnPropNameInRow="IdTest" msprop:Generator_ColumnPropNameInTable="IdTestColumn" msprop:Generator_UserColumnName="IdTest" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Preguntas" msprop:Generator_TableClassName="PreguntasDataTable" msprop:Generator_TableVarName="tablePreguntas" msprop:Generator_TablePropName="Preguntas" msprop:Generator_RowDeletingName="PreguntasRowDeleting" msprop:Generator_RowChangingName="PreguntasRowChanging" msprop:Generator_RowEvHandlerName="PreguntasRowChangeEventHandler" msprop:Generator_RowDeletedName="PreguntasRowDeleted" msprop:Generator_UserTableName="Preguntas" msprop:Generator_RowChangedName="PreguntasRowChanged" msprop:Generator_RowEvArgName="PreguntasRowChangeEvent" msprop:Generator_RowClassName="PreguntasRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdPregunta" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIdPregunta" msprop:Generator_ColumnPropNameInRow="IdPregunta" msprop:Generator_ColumnPropNameInTable="IdPreguntaColumn" msprop:Generator_UserColumnName="IdPregunta" type="xs:int" />
              <xs:element name="Enunciado" msprop:Generator_ColumnVarNameInTable="columnEnunciado" msprop:Generator_ColumnPropNameInRow="Enunciado" msprop:Generator_ColumnPropNameInTable="EnunciadoColumn" msprop:Generator_UserColumnName="Enunciado">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="RespV" msprop:Generator_ColumnVarNameInTable="columnRespV" msprop:Generator_ColumnPropNameInRow="RespV" msprop:Generator_ColumnPropNameInTable="RespVColumn" msprop:Generator_UserColumnName="RespV" type="xs:boolean" />
              <xs:element name="IdTest" msprop:Generator_ColumnVarNameInTable="columnIdTest" msprop:Generator_ColumnPropNameInRow="IdTest" msprop:Generator_ColumnPropNameInTable="IdTestColumn" msprop:Generator_UserColumnName="IdTest" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Test" msprop:Generator_TableClassName="TestDataTable" msprop:Generator_TableVarName="tableTest" msprop:Generator_TablePropName="Test" msprop:Generator_RowDeletingName="TestRowDeleting" msprop:Generator_RowChangingName="TestRowChanging" msprop:Generator_RowEvHandlerName="TestRowChangeEventHandler" msprop:Generator_RowDeletedName="TestRowDeleted" msprop:Generator_UserTableName="Test" msprop:Generator_RowChangedName="TestRowChanged" msprop:Generator_RowEvArgName="TestRowChangeEvent" msprop:Generator_RowClassName="TestRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdTest" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnIdTest" msprop:Generator_ColumnPropNameInRow="IdTest" msprop:Generator_ColumnPropNameInTable="IdTestColumn" msprop:Generator_UserColumnName="IdTest" type="xs:int" />
              <xs:element name="Descripcion" msprop:Generator_ColumnVarNameInTable="columnDescripcion" msprop:Generator_ColumnPropNameInRow="Descripcion" msprop:Generator_ColumnPropNameInTable="DescripcionColumn" msprop:Generator_UserColumnName="Descripcion">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Categorias" />
      <xs:field xpath="mstns:IdCategoria" />
    </xs:unique>
    <xs:unique name="CategoriasTests_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CategoriasTests" />
      <xs:field xpath="mstns:IdCategoria" />
      <xs:field xpath="mstns:IdTest" />
    </xs:unique>
    <xs:unique name="Preguntas_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Preguntas" />
      <xs:field xpath="mstns:IdPregunta" />
    </xs:unique>
    <xs:unique name="Test_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Test" />
      <xs:field xpath="mstns:IdTest" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_CategoriasTests_Categorias" msdata:parent="Categorias" msdata:child="CategoriasTests" msdata:parentkey="IdCategoria" msdata:childkey="IdCategoria" msprop:Generator_UserChildTable="CategoriasTests" msprop:Generator_ChildPropName="GetCategoriasTestsRows" msprop:Generator_UserRelationName="FK_CategoriasTests_Categorias" msprop:Generator_ParentPropName="CategoriasRow" msprop:Generator_RelationVarName="relationFK_CategoriasTests_Categorias" msprop:Generator_UserParentTable="Categorias" />
      <msdata:Relationship name="FK_CategoriasTests_Test" msdata:parent="Test" msdata:child="CategoriasTests" msdata:parentkey="IdTest" msdata:childkey="IdTest" msprop:Generator_UserChildTable="CategoriasTests" msprop:Generator_ChildPropName="GetCategoriasTestsRows" msprop:Generator_UserRelationName="FK_CategoriasTests_Test" msprop:Generator_RelationVarName="relationFK_CategoriasTests_Test" msprop:Generator_UserParentTable="Test" msprop:Generator_ParentPropName="TestRow" />
      <msdata:Relationship name="FK_TPreguntas_TTest" msdata:parent="Test" msdata:child="Preguntas" msdata:parentkey="IdTest" msdata:childkey="IdTest" msprop:Generator_UserChildTable="Preguntas" msprop:Generator_ChildPropName="GetPreguntasRows" msprop:Generator_UserRelationName="FK_TPreguntas_TTest" msprop:Generator_RelationVarName="relationFK_TPreguntas_TTest" msprop:Generator_UserParentTable="Test" msprop:Generator_ParentPropName="TestRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>